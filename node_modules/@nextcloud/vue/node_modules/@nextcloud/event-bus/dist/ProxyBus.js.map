{"version":3,"sources":["../lib/ProxyBus.ts"],"names":["ProxyBus","constructor","bus","getVersion","console","warn","packageJson","version","subscribe","name","handler","unsubscribe","emit","event"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,MAAMA,QAAN,CAAmC;AAItCC,EAAAA,WAAW,CAACC,GAAD,EAAgB;AAAA;;AACvB,QAAI,OAAOA,GAAG,CAACC,UAAX,KAA0B,UAA1B,IAAwC,CAAC,oBAAMD,GAAG,CAACC,UAAJ,EAAN,CAA7C,EAAsE;AAClEC,MAAAA,OAAO,CAACC,IAAR,CAAa,0DAAb;AACH,KAFD,MAEO,IAAI,oBAAMH,GAAG,CAACC,UAAJ,EAAN,MAA4B,oBAAM,KAAKA,UAAL,EAAN,CAAhC,EAA0D;AAC7DC,MAAAA,OAAO,CAACC,IAAR,CAAa,sCAAsCH,GAAG,CAACC,UAAJ,EAAtC,GAAyD,QAAzD,GAAoE,KAAKA,UAAL,EAAjF;AACH;;AAED,SAAKD,GAAL,GAAWA,GAAX;AACH;;AAEDC,EAAAA,UAAU,GAAW;AACjB,WAAOG,WAAW,CAACC,OAAnB;AACH;;AAEDC,EAAAA,SAAS,CAACC,IAAD,EAAeC,OAAf,EAA4C;AACjD,SAAKR,GAAL,CAASM,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB;AACH;;AAEDC,EAAAA,WAAW,CAACF,IAAD,EAAeC,OAAf,EAA4C;AACnD,SAAKR,GAAL,CAASS,WAAT,CAAqBF,IAArB,EAA2BC,OAA3B;AACH;;AAEDE,EAAAA,IAAI,CAACH,IAAD,EAAeI,KAAf,EAAmC;AACnC,SAAKX,GAAL,CAASU,IAAT,CAAcH,IAAd,EAAoBI,KAApB;AACH;;AA5BqC","sourcesContent":["import valid from \"semver/functions/valid\";\nimport major from \"semver/functions/major\";\n\nimport packageJson from \"../package.json\";\nimport { Event } from \"./Event.js\";\nimport { EventBus } from \"./EventBus.js\";\nimport { EventHandler } from \"./EventHandler.js\";\n\nexport class ProxyBus implements EventBus {\n\n    private bus: EventBus;\n\n    constructor(bus: EventBus) {\n        if (typeof bus.getVersion !== 'function' || !valid(bus.getVersion())) {\n            console.warn('Proxying an event bus with an unknown or invalid version')\n        } else if (major(bus.getVersion()) !== major(this.getVersion())) {\n            console.warn('Proxying an event bus of version ' + bus.getVersion() + ' with ' + this.getVersion())\n        }\n\n        this.bus = bus;\n    }\n\n    getVersion(): string {\n        return packageJson.version\n    }\n\n    subscribe(name: string, handler: EventHandler): void {\n        this.bus.subscribe(name, handler);\n    }\n\n    unsubscribe(name: string, handler: EventHandler): void {\n        this.bus.unsubscribe(name, handler);\n    }\n\n    emit(name: string, event: Event): void {\n        this.bus.emit(name, event);\n    }\n\n}\n"],"file":"ProxyBus.js"}