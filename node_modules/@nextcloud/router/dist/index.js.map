{"version":3,"sources":["../lib/index.ts"],"names":["linkTo","app","file","generateFilePath","linkToRemoteBase","service","getRootUrl","generateRemoteUrl","window","location","protocol","host","generateOcsUrl","url","params","options","allOptions","Object","assign","ocsVersion","version","_generateUrlPath","escape","_build","text","vars","replace","a","b","r","encodeURIComponent","toString","charAt","generateUrl","noRewrite","OC","config","modRewriteWorking","imagePath","indexOf","type","isCore","coreApps","link","substring","length","encodeURI","appswebroots","webroot"],"mappings":"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","sourcesContent":["/// <reference types=\"@nextcloud/typings\" />\n\ndeclare var OC: Nextcloud.v16.OC | Nextcloud.v17.OC | Nextcloud.v18.OC | Nextcloud.v19.OC | Nextcloud.v20.OC;\n\n/**\n * Get an url with webroot to a file in an app\n *\n * @param {string} app the id of the app the file belongs to\n * @param {string} file the file path relative to the app folder\n * @return {string} URL with webroot to a file\n */\nexport const linkTo = (app: string, file: string) => generateFilePath(app, '', file)\n\n/**\n * Creates a relative url for remote use\n *\n * @param {string} service id\n * @return {string} the url\n */\nconst linkToRemoteBase = (service: string) => getRootUrl() + '/remote.php/' + service\n\n/**\n * @brief Creates an absolute url for remote use\n * @param {string} service id\n * @return {string} the url\n */\nexport const generateRemoteUrl = (service: string) => window.location.protocol + '//' + window.location.host + linkToRemoteBase(service)\n\n/**\n * Get the base path for the given OCS API service\n *\n * @param {string} url OCS API service url\n * @param {object} params parameters to be replaced into the service url\n * @param {UrlOptions} options options for the parameter replacement\n * @param {boolean} options.escape Set to false if parameters should not be URL encoded (default true)\n * @param {Number} options.ocsVersion OCS version to use (defaults to 2)\n * @return {string} Absolute path for the OCS URL\n */\nexport const generateOcsUrl = (url: string, params?: object, options?: UrlOptions) => {\n    const allOptions = Object.assign({\n        ocsVersion: 2\n    }, options || {})\n\n   const version = (allOptions.ocsVersion === 1) ? 1 : 2\n\n    return window.location.protocol + '//' + window.location.host + getRootUrl() + '/ocs/v' + version + '.php' + _generateUrlPath(url, params, options);\n}\n\nexport interface UrlOptions {\n    escape: boolean,\n    noRewrite: boolean,\n    ocsVersion: Number\n}\n\n/**\n * Generate a url path, which can contain parameters\n *\n * Parameters will be URL encoded automatically\n *\n * @param {string} url address (can contain placeholders e.g. /call/{token} would replace {token} with the value of params.token\n * @param {object} params parameters to be replaced into the address\n * @param {UrlOptions} options options for the parameter replacement\n * @return {string} Path part for the given URL\n */\nconst _generateUrlPath = (url: string, params?: object, options?: UrlOptions) => {\n    const allOptions = Object.assign({\n        escape: true\n    }, options || {})\n\n    const _build = function (text: string, vars: object) {\n        vars = vars || {};\n        return text.replace(/{([^{}]*)}/g,\n            function (a: string, b: any) {\n                var r = vars[b];\n                if (allOptions.escape) {\n                    return (typeof r === 'string' || typeof r === 'number') ? encodeURIComponent(r.toString()) : encodeURIComponent(a);\n                } else {\n                    return (typeof r === 'string' || typeof r === 'number') ? r.toString() : a;\n                }\n            }\n        );\n    };\n\n    if (url.charAt(0) !== '/') {\n        url = '/' + url;\n    }\n\n    return _build(url, params || {});\n}\n\n/**\n * Generate the url with webroot for the given relative url, which can contain parameters\n *\n * Parameters will be URL encoded automatically\n *\n * @param {string} url address (can contain placeholders e.g. /call/{token} would replace {token} with the value of params.token\n * @param {object} params parameters to be replaced into the url\n * @param {UrlOptions} options options for the parameter replacement\n * @param {boolean} options.noRewrite True if you want to force index.php being added\n * @param {boolean} options.escape Set to false if parameters should not be URL encoded (default true)\n * @return {string} URL with webroot for the given relative URL\n */\nexport const generateUrl = (url: string, params?: object, options?: UrlOptions) => {\n    const allOptions = Object.assign({\n        noRewrite: false\n    }, options || {})\n\n    if (OC.config.modRewriteWorking === true && !allOptions.noRewrite) {\n        return getRootUrl() + _generateUrlPath(url, params, options);\n    }\n\n    return getRootUrl() + '/index.php' + _generateUrlPath(url, params, options);\n}\n\n/**\n * Get the path with webroot to an image file\n * if no extension is given for the image, it will automatically decide\n * between .png and .svg based on what the browser supports\n *\n * @param {string} app the app id to which the image belongs\n * @param {string} file the name of the image file\n * @return {string}\n */\nexport const imagePath = (app: string, file: string) => {\n    if (file.indexOf('.') === -1) {\n        //if no extension is given, use svg\n        return generateFilePath(app, 'img', file + '.svg')\n    }\n\n    return generateFilePath(app, 'img', file)\n}\n\n/**\n * Get the url with webroot for a file in an app\n *\n * @param {string} app the id of the app\n * @param {string} type the type of the file to link to (e.g. css,img,ajax.template)\n * @param {string} file the filename\n * @return {string} URL with webroot for a file in an app\n */\nexport const generateFilePath = (app: string, type: string, file: string) => {\n    const isCore = OC.coreApps.indexOf(app) !== -1\n    let link = getRootUrl()\n    if (file.substring(file.length - 3) === 'php' && !isCore) {\n        link += '/index.php/apps/' + app;\n        if (file !== 'index.php') {\n            link += '/'\n            if (type) {\n                link += encodeURI(type + '/')\n            }\n            link += file\n        }\n    } else if (file.substring(file.length - 3) !== 'php' && !isCore) {\n        link = OC.appswebroots[app];\n        if (type) {\n            link += '/' + type + '/'\n        }\n        if (link.substring(link.length - 1) !== '/') {\n            link += '/'\n        }\n        link += file\n    } else {\n        if ((app === 'settings' || app === 'core' || app === 'search') && type === 'ajax') {\n            link += '/index.php/'\n        } else {\n            link += '/'\n        }\n        if (!isCore) {\n            link += 'apps/'\n        }\n        if (app !== '') {\n            app += '/'\n            link += app\n        }\n        if (type) {\n            link += type + '/'\n        }\n        link += file\n    }\n    return link\n}\n\n/**\n * Return the web root path where this Nextcloud instance\n * is accessible, with a leading slash.\n * For example \"/nextcloud\".\n *\n * @return {string} web root path\n */\nexport const getRootUrl = () => OC.webroot\n"],"file":"index.js"}