"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoggerBuilder = void 0;

require("core-js/modules/es.object.define-property.js");

var _auth = require("@nextcloud/auth");

var _contracts = require("./contracts");

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LoggerBuilder = /*#__PURE__*/function () {
  function LoggerBuilder(factory) {
    var _OC, _OC$config, _OC2;

    _classCallCheck(this, LoggerBuilder);

    _defineProperty(this, "context", void 0);

    _defineProperty(this, "factory", void 0);

    this.context = {};
    this.factory = factory; // Up to, including, nextcloud 24 the loglevel was not exposed

    this.context.level = window.hasOwnProperty('OC') && ((_OC = OC) === null || _OC === void 0 ? void 0 : (_OC$config = _OC.config) === null || _OC$config === void 0 ? void 0 : _OC$config.loglevel) !== undefined ? OC.config.loglevel : _contracts.LogLevel.Warn; // Override loglevel if we are in debug mode

    if (window.hasOwnProperty('OC') && (_OC2 = OC) !== null && _OC2 !== void 0 && _OC2.debug) {
      this.context.level = _contracts.LogLevel.Debug;
    }
  }

  _createClass(LoggerBuilder, [{
    key: "setApp",
    value: function setApp(appId) {
      this.context.app = appId;
      return this;
    }
  }, {
    key: "setLogLevel",
    value: function setLogLevel(level) {
      this.context.level = level;
      return this;
    }
  }, {
    key: "setUid",
    value: function setUid(uid) {
      this.context.uid = uid;
      return this;
    }
  }, {
    key: "detectUser",
    value: function detectUser() {
      var user = (0, _auth.getCurrentUser)();

      if (user !== null) {
        this.context.uid = user.uid;
      }

      return this;
    }
  }, {
    key: "build",
    value: function build() {
      return this.factory(this.context);
    }
  }]);

  return LoggerBuilder;
}();

exports.LoggerBuilder = LoggerBuilder;
//# sourceMappingURL=LoggerBuilder.js.map